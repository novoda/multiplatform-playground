// Mocks generated by Mockito 5.1.0 from annotations
// in news/test/features/frontpage/data/repositories/articles_repository_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:internet_connection_checker/internet_connection_checker.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:news/core/network/network_info.dart' as _i3;
import 'package:news/features/frontpage/data/datasource/articles_data_source.dart'
    as _i7;
import 'package:news/features/frontpage/data/datasource/articles_local_data_source.dart'
    as _i5;
import 'package:news/features/frontpage/data/models/article_model.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeInternetConnectionChecker_0 extends _i1.Fake
    implements _i2.InternetConnectionChecker {}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i3.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.InternetConnectionChecker get connectionChecker =>
      (super.noSuchMethod(Invocation.getter(#connectionChecker),
              returnValue: _FakeInternetConnectionChecker_0())
          as _i2.InternetConnectionChecker);
  @override
  _i4.Future<bool> get isConnected =>
      (super.noSuchMethod(Invocation.getter(#isConnected),
          returnValue: Future<bool>.value(false)) as _i4.Future<bool>);
}

/// A class which mocks [ArticlesLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockArticlesLocalDataSource extends _i1.Mock
    implements _i5.ArticlesLocalDataSource {
  MockArticlesLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i6.ArticleModel>> getLastTopHeadlines() =>
      (super.noSuchMethod(Invocation.method(#getLastTopHeadlines, []),
              returnValue:
                  Future<List<_i6.ArticleModel>>.value(<_i6.ArticleModel>[]))
          as _i4.Future<List<_i6.ArticleModel>>);
  @override
  _i4.Future<void> cacheTopHeadlines(
          List<_i6.ArticleModel>? topHeadlinesList) =>
      (super.noSuchMethod(
          Invocation.method(#cacheTopHeadlines, [topHeadlinesList]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
}

/// A class which mocks [ArticlesRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockArticlesRemoteDataSource extends _i1.Mock
    implements _i7.ArticlesRemoteDataSource {
  MockArticlesRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i6.ArticleModel>> getTopHeadlines() =>
      (super.noSuchMethod(Invocation.method(#getTopHeadlines, []),
              returnValue:
                  Future<List<_i6.ArticleModel>>.value(<_i6.ArticleModel>[]))
          as _i4.Future<List<_i6.ArticleModel>>);
  @override
  _i4.Future<List<_i6.ArticleModel>> getEverythingAbout(String? query) =>
      (super.noSuchMethod(Invocation.method(#getEverythingAbout, [query]),
              returnValue:
                  Future<List<_i6.ArticleModel>>.value(<_i6.ArticleModel>[]))
          as _i4.Future<List<_i6.ArticleModel>>);
}

/// A class which mocks [ArticlesRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockArticlesRemoteDataSourceForTest extends _i1.Mock
    implements _i7.ArticlesRemoteDataSource {
  @override
  _i4.Future<List<_i6.ArticleModel>> getTopHeadlines() =>
      (super.noSuchMethod(Invocation.method(#getTopHeadlines, []),
              returnValue:
                  Future<List<_i6.ArticleModel>>.value(<_i6.ArticleModel>[]))
          as _i4.Future<List<_i6.ArticleModel>>);
  @override
  _i4.Future<List<_i6.ArticleModel>> getEverythingAbout(String? query) =>
      (super.noSuchMethod(Invocation.method(#getEverythingAbout, [query]),
              returnValue:
                  Future<List<_i6.ArticleModel>>.value(<_i6.ArticleModel>[]))
          as _i4.Future<List<_i6.ArticleModel>>);
}
