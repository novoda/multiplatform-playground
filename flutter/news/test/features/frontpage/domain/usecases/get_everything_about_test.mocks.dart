// Mocks generated by Mockito 5.1.0 from annotations
// in news/test/features/frontpage/domain/usecases/get_everything_about_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i7;

import 'package:dartz/dartz.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:news/core/error/failures.dart' as _i8;
import 'package:news/core/network/network_info.dart' as _i4;
import 'package:news/features/frontpage/data/datasource/articles_data_source.dart'
    as _i3;
import 'package:news/features/frontpage/data/datasource/articles_local_data_source.dart'
    as _i2;
import 'package:news/features/frontpage/data/repositories/articles_repository.dart'
    as _i6;
import 'package:news/features/frontpage/domain/entities/article.dart' as _i9;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeArticlesLocalDataSource_0 extends _i1.Fake
    implements _i2.ArticlesLocalDataSource {}

class _FakeArticlesRemoteDataSource_1 extends _i1.Fake
    implements _i3.ArticlesRemoteDataSource {}

class _FakeNetworkInfo_2 extends _i1.Fake implements _i4.NetworkInfo {}

class _FakeEither_3<L, R> extends _i1.Fake implements _i5.Either<L, R> {}

/// A class which mocks [ArticlesRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockArticlesRepository extends _i1.Mock
    implements _i6.ArticlesRepository {
  MockArticlesRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ArticlesLocalDataSource get localDataSource =>
      (super.noSuchMethod(Invocation.getter(#localDataSource),
              returnValue: _FakeArticlesLocalDataSource_0())
          as _i2.ArticlesLocalDataSource);
  @override
  _i3.ArticlesRemoteDataSource get remoteDataSource =>
      (super.noSuchMethod(Invocation.getter(#remoteDataSource),
              returnValue: _FakeArticlesRemoteDataSource_1())
          as _i3.ArticlesRemoteDataSource);
  @override
  _i4.NetworkInfo get networkInfo =>
      (super.noSuchMethod(Invocation.getter(#networkInfo),
          returnValue: _FakeNetworkInfo_2()) as _i4.NetworkInfo);
  @override
  _i7.Future<_i5.Either<_i8.Failure, List<_i9.Article>>> getEverythingAbout(
          String? query) =>
      (super.noSuchMethod(Invocation.method(#getEverythingAbout, [query]),
          returnValue: Future<_i5.Either<_i8.Failure, List<_i9.Article>>>.value(
              _FakeEither_3<_i8.Failure, List<_i9.Article>>())) as _i7
          .Future<_i5.Either<_i8.Failure, List<_i9.Article>>>);
  @override
  _i7.Future<_i5.Either<_i8.Failure, List<_i9.Article>>> getTopHeadlines() =>
      (super.noSuchMethod(Invocation.method(#getTopHeadlines, []),
          returnValue: Future<_i5.Either<_i8.Failure, List<_i9.Article>>>.value(
              _FakeEither_3<_i8.Failure, List<_i9.Article>>())) as _i7
          .Future<_i5.Either<_i8.Failure, List<_i9.Article>>>);
}
